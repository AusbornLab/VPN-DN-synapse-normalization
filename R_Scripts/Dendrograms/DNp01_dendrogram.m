%path(path, '/Users/jamesjeanne/Dropbox/Jamie/Code/Utils/TREES1.15/')

close all
clear all



start_trees
load_tree()

synapseNodesLC4{1} = [10112 13204 13730  9439  9414 10057 10133 10970 10829  9374 10726  9074  9494 12117 10159 10933   449 14298 13386 13370  9319 10563 10131  9712 10207   453 ...
14443  9887 12137 12051 10994 12425 10161 14346  9535 14458 10669  9014 12117 10417  9338 14102 13572 14238 10740 14205 11046 10139   453 14186 10112 13630 ...
13611 10206 10564 11011 12053 10671   452  9336  9250  9721 12412  9125 13564  9740 12275 10779  9536  9536  9487 11047 10170 10168  9025 10843 13484  9236 ...
13730 13244 10804 10814 13781  9818 12054 13793 13564 14164 10133 12181 10846 13069   510  9203 11011 13915 10947  9043  9427  8919  9269 10885 10231 13326 ...
13346  9129 10847 12972  9828 13237  8907 12266 10597 12057   418   449 10670  9530 10174  9013   492  9859  9518 12401   478   456 13794  9732  9203  9237 ...
449  9427 13584 12057 10928 10773 10858 14317 13908 12373 11014 13327 13900 12403 13495 13430 13417 10744  9165 14118 13699 10842 10596 11019 10562 10142 ...
10784   531 10955 10168   480 13331  9598 12111 14182 12132 13394 14181  9597 12413   478 14236 10675 10077 14334  9234  9607 12229 13060  9818 11018 10823 ...
12163  9130 13527 13914 10861 12297 12297 13393 10564 12034 10212 13545 13262 13799 13604 12119 11046 14331   492 13573  8887  9571  9536 13699 10848   492 ...
9119  9727 14317  9819 12159 13619 10076 13315  9009 12385 10197  9515 12391 13907  9125 10142 12414  9177 14314 13799 14271  9283 12124  9219  9163 10947 ...
10865 10609  9124 14283 10744 10782  9261 12077 14126 13070 13196   531  9007 10816 10231  8894  9643 13492  9528 10804 10726  9319 13315 12294  9072 11033 ...
9609 10779 12139 13582  9496  9415   510  9110 13739  8930 11019 13070 10696 13491 13493 14115 10842 11019 13770 14228  9681  9263  9319 10924   509  9199 ...
9013 14120   453 10237 10116 13765  9739 10841  9852  9615 13699 12973   454 10165 12181  9140 13730 14228 13256  9045  9535 10177 12159 13183  9587  9883 ...
13730 13098 10204 13442 10195 10804 12143 10133   418 10177 13550 12142 13796  9283 10780 10418  9615 10199 13252 13557 10419 13451  9288 12054  9857 14231 ...
14228 14116 13313 10218 12283 11031  9009   474 12960 10184 14096   417  9738 12266  9288  8930 13580  9539  8944  9049 10672  9754   495 13516 12404  9502 ...
14300 10082 14274 10091  9238   480   509 13216  9496 12264 13798 13584  9498 13375 13569  9416 10789 13484 14164  9413 14237  9663 14185   456  9013 10678 ...
531   430 13252  9081 13730 10847 12229  9163   454 12159 10976   449  9745 13293 10158 10784 13629 12977 13843 12294 12316 10931 10566  9439 12389 10841 ...
9110 13483   509  9883 10119  9452 10158 13556 12057   495 11047 10116 12159  9712 12051  9219  9540 13516 10057 10198  9039 14170 12438 14172  9852 10115 ...
10432 14099  9191 12088 13578 10092 12147 13803 10137 10078  9323 13469  9203 10784 13481  9650 10613 10686 10889 13501 13398 10130 13217 10933 10789  9886 ...
543 13619 14234 12283 10963 10187 13070   510 12293 14443  9419   510 12264 13802   531 10748  9141  9275 14314 12310  9755 14116 13393  8933 13454 12993 ...
10134 10082 13407 13765 13616 12344 13730 13559 10757 12398   531  9652  9384  9157 14108 12387  9398 10932 14337 10858 10788 13584 10596 10561 10122 12051 ...
13071 10318 13065  9908 10244 10445 12573  9941 10012 10441 10299 12573 12872 10538 12862 12888 10376 10312  9943 12727  9912  9942 12622 10547];

synapseNodesLPLC2{1} = [12824 12896 10483 10388 13095 10401 12839 12832  9947  9874 12885 12820 10507 13036 12621 12807  9941 13003 10293 12773 12859 13016 12882  9899 10385 12859 ...
10399  9951 12721 10328  9868 12984  9951  9897 12623 12869 13058 10423 10391 13089 12820  9860 12718  9951  9931  9905  9896  9933  9862 13078 10424 10001 ...
10002 12710 10394 12839 13087 12728 12753 10026 12871 12784 12778 10509  9926 10303 10425  9999 12896 10003 10369 10320 12604 13081 10320 10274 10406 10310 ...
12713 10289 10386 10396 10298  9928 10333 10445 10304  9950  9952 12615 10368 13051 12799 10328 10382  9872  9945 13053 13049 12612 10284 10329  9931 12707 ...
10394 10295 12847 10517 10327  9898 10390 12844 10383 10405 12865 12822  9934 12746 10357 10041 10340 10423 10279  9905 12841 10031 12841 12863  9945 10027 ...
10357 12586  9929 10400 10382 12943 10491 10376 13037 10377  9994 12729 13029 10509 10311 13056 10506 10343 10014 13033 10343 12889 10043 12826 10293 10005 ...
10290  9977 10465  9958 10221 10385  9955 13025 10341  9861 9905 12849 12728  9945 10467 12937 10465 12836  9905 13078 12956 10408 12622 12939  9933 12706 ...
9908 12736 12593 12839 10039 10217 10271  9944  9997 10391  9996 12822 12740 10367  9931 12827 12811  9900 12856 12572 10256 12619 12817 10437 12863 12582 ...
12816 12938 12814 10296 10357 10217  9925 10044  9998 10408 13094 10538 10348 10358 10538 12591 10340 10274 10315 13091 12786 10467  9912 10354 12754 10315 ...
10327  9981 12707 10326 10318 13054 10354 10297 10415 10296 12827 10040 10047 12800 12725  9861 10386 13089 10004 10315 13043  9959 12589 13057  9907 12707 ...
12892  9867 10486 12826 10435 12808 12859 10545 12870 12825 10395 13087  9943 10546 10375 12887 13000 13019 12613  9929 10291  9934 10279 12785 10404 10546 ...
12707 12786 10358 10352 13034 10291 12803 12584 10330 12851  9975 13084 12836 12716 12616  9935  9951  9994 10034 13077 10032 12856 10328 10416 12826 10508 ...
10365  9945 10452 12710 10337  9952 12587 12727 10533 10366 12993  9905  9896 12753  9929 10356 12990  9947 10520 10508  9913 10039  9821 10393 12817  9894 ...
10354 10290 10435 10341  9905 12862 10327 10314 10395 10280 10407  9898 10308  9930  9907  9861 12852 10446 10305 10445  9937 12576  9929  9984 13057 12599 ...
10000 10297 10330  9865 13083 10318 10391  9860 10340  9933 12863 12585 10517 10522 10471 12737 10025 13084 13081 10333  9953 10003 10339 12801  9934 10319 ...
9929 10032 10387  9953  9858 10300 12586 12768 12576 12623 12765 10269  9977  9941 10031 12815 12864 12811 12717 10316  9913  9909 10283  9934 10375 10427 ...
10257 10031 12572 12836 10404 13094 13050 13050 10276 10468 12768  9939  9907  9915 10396 12621 12784 12618 13051  9990 10322  9897 10385  9953 10493  9866 ...
10288 10318  9983 10003 10383 10336 10414 12784 12871 12771 10408 10523 12785 12805 12997  9980 12872 10408 12604 10409 10013  9894 12811 12831 10387 12809 ...
10383  9938 10407 12796 12842  9929 10034  9937 10043 12939 10297 12877 10001 12600 10150 10210  9898 12715  9900 12612 10324 12824 13045 13051 10413  9950 ...
13072 10282 10042 12718 12820  9949 12707 13050  9933 10390 12618  9974 12811 13063 13098  9922 12886 12775 10527  9898 12772 12821 10435  9939 12884 10036 ...
12896 10437  9929 10002 10491 12893 10446 10296 10327 12784  9862  9978 12841  9908 12767 13095 10329 10355 12618 10339 10489  9966 12833 13072 10395 10015 ...
9954 12871 10333 10483 13081  9944 12718 10302 10288  9860 10336 13095 13054 12692 12835 10337 12785  9958 10401  9973 12618  9967 10340 13095 12782 10031 ...
12740  9914 10336  9951 10376 12943];



% - intree::integer:index of tree in trees or structured tree
% - color::RGB 3-tupel, vector or matrix: RGB values {DEFAULT [0 0 0]}
%     if vector then values are treated in colormap (must contain one value
%     per node then!).
%     if matrix (N x 3) then individual colors are mapped to each
%     element, works only on line-plots
% - DD:: 1x3 vector: coordinates offset {DEFAULT no offset [0,0,0]}
% - ipart::index:index to the subpart to be plotted {DEFAULT: all nodes}
% - res::integer>1: resolution for cylinders. Does not affect line and
%     quiver or blatt. {DEFAULT: 8}
% - options::string: {DEFAULT '-p'} has to be one of the following:
%     '-b'  : 2D pieces are displayed on a 3D grid (-b stands for -blatt)
%             showing the diameter but not as real cylinders. Output is a
%             series of patches. Fastest representation.
%        '-b1' : patches are mapped on x y {DEFAULT}
%        '-b2' : patches are mapped on x z
%        '-b3' : patches are mapped on y z
%     '-p'  : correct cylinder representation but not yet flawless and a
%             bit slower than "blatt" representation.
%     '-2l' : 2D (using only X and Y). forces line output (2D), no diameter
%             (slower), color is mapped independently of matlab, always
%             min to max.
%     '-3l' : 3D. forces line output (2D), no diameter (slower, as '-l')
%     '-2q' : 2D (using only X and Y). edges are represented as arrows
%             (using quiver) . Color vectors do not work.
%     '-3q' : 3D. edges are represented as arrows (using quiver, as '-q')
%   additional options:
%     '-thin'  : all diameters 1um, for line and quiver linewidth 0.25
%     '-thick' : all diameters + 3um, for line and quiver linewidth 3


figure
%plot_tree(trees{1},[0 0 0], [0 0 0], 1:6857, 8, '-p')
plot_tree(trees{1})%,[0 0 0], [0 0 0], 1:6857, 8, '-p')
view(180,0) %azimuth, elevation



axis xy



figure
for i = 1:2
    %subplot(2,1,i)

    [xdend tree] = xdend_tree(trees{i});

    yvec= Pvec_tree(trees{i});
    wscale = 1;

    idpar = trees{i}.dA * (1 : size(trees{i}.dA, 1))'; % vector containing index to direct parent
    idpar (idpar == 0) = 1;
    X1 = (xdend(idpar) ) ; % coordinates of the nodes in dendrogram
    X2 = xdend           ;
    Y1 = yvec(idpar)     ;
    Y2 = yvec            ;
    
    X1all = [X1; X2];
    X2all = [X2; X2];
    Y1all = [Y1; Y1];
    Y2all = [Y1; Y2];
    
    X1all = [X1(1:end); X2(1:end)];
    X2all = [X2(1:end); X2(1:end)];
    Y1all = [Y1(1:end); Y1(1:end)];
    Y2all = [Y1(1:end); Y2(1:end)];

    HP = line ([Y1all Y2all]', [X1all X2all]');
    set (HP, 'color', 'k');
    
    
    xpositionsLC4 = xdend(synapseNodesLC4{i})';
    ypositionsLC4 = yvec(synapseNodesLC4{i})';
    hold on
    rgbValues_LC4 = [0,0,1];
    plot(ypositionsLC4, xpositionsLC4, 'o', 'Color', rgbValues_LC4, 'MarkerFaceColor', rgbValues_LC4, 'MarkerSize', 3)
    
    xpositionsLPLC2 = xdend(synapseNodesLPLC2{i})';
    ypositionsLPLC2 = yvec(synapseNodesLPLC2{i})';
    hold on
    rgbValues_LPLC2 = [1, 0.647, 0];
    plot(ypositionsLPLC2, xpositionsLPLC2, 'o', 'Color', rgbValues_LPLC2, 'MarkerFaceColor', rgbValues_LPLC2, 'MarkerSize', 3)

    ylim([0 1200])
    xlim([0 350])
    
    
end

set(gcf, 'Position', [0 0 900 500])
set(gcf, 'renderer', 'painters')
