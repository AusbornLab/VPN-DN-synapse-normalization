%path(path, '/Users/jamesjeanne/Dropbox/Jamie/Code/Utils/TREES1.15/')

close all
clear all



start_trees
load_tree()

synapseNodesLC4{1} = [9577  6765  2242  7133  6134  3618  1647  4639 15107  2465  7101  5207  4133  9263  5176  2158  1401  1561 10950  1424  3647  3492  1822  7021 10779  2230 ...
8941   683  2639  2029  7966  3664 11199  2591 11379 11401 11123  1808  4559   859  1716 11356  2931  2935  6573  4303  4584  1131  1131  9218  7199  7117 ...
10800  2613 10760  4487  4230  7907  9188  7241  3590  2306 10760  5199  1465  1745  7994  3456 11192   887 14691  5440  9266  7504  6827  1914  3683  4201 ...
10938  6771  3542  3942  6192  1201  2607  4174  3989 14636 14468  6711  4401  2263 11320 15045 15117  1118  6794  1488  2344  2197  5183  1880 14427  2574 ...
7386  5230  1279  6722  2148  3681  1487  3436  6158  7147  8138  4234  5254  3955  6798  7132  9542 14551  4132  8924  6753  3421  6639  7465  9603  2672 ...
7472  2911 15059  1978  1243  6701  8287  8101  5110  4583  1555  3480  5158  1759 14362  1717  4374  4459  9040  8210  1804  6273  3444  9221  8344  3453 ...
3600  2533  7317  1794 10682  2869  5510  1828  3671  1296  9584  3911  8048  2722  6972  7119 10759 15185  2337  1594 11161  2346  2834  5315  9371  4607 ...
5448  4113  4512  6267  6890  7983  5262  7209 10904  3940  5502 10984  3736  5420  2824 11363  6147  4189  6330  3401  7248  1201  9583  2824  2378  6294 ...
725  9005  5138  4358  7223  4187  6873  2231 10984  9581  9313  6264  4626  9242  1978 14515  3878  1920  1780 14978  2931   785  2543  2391  6128 14937 ...
7088  7100  6692  4178  3795  1869  7100  7100 14682  3530  2764  2401 10892  2002  5375  2296  2674  2711  6708  7996  2219  9670  3469  1637  6299 11197 ...
4503  3915  8143  7320 14598  9371  8183  8148  5115  9611  3673   656  6797  7022  4305 14937  9221  4235  9285  1243  6788  1571  2052  1231   670 10765 ...
11379  2391  1415  9623  4133  7493  2208   641 10890 10899  4297  3915  8051  3501  9188 15061  5365  7383  3923  4535   855  2251  5125 15060 11033  9222 ...
1974  7339  1923  7189  3915  7966  2483 10909  4512  6585  3719  9216  2999  5474 14418  7502  2025  1953  2252  3929  3422 11228 10765  9406  5459  8183 ...
758 10962 11321   911  7493 11111 14921  4258  2999  7897  4513 14653  1965  4498  7979  6818  7338  5262  2409  4490  2009  3920  1645   990   791  2543 ...
14497  2052 11036  4411  1483  3824  9192  8928  8088 14693  4290  7242 10914  3614 10835  2829  1232  4361  2312 11363  7003  1013  5396  7028  6767 10687 ...
7095  9589 11107  1124  1692 11179  7895  4016  8128 11338  7242  5111  9591  2003   776  7147 15030   861  7479  1923  8928 14527  8061  8158  3664 11196 ...
5389  4187  6693  3824  9277  6160  6754 11089  2547  3626  8064  2552  7071 14526  6595  9221  4509  9401  3989  7057 11398 10816  2491  6876 15105  3527 ...
11378  5235  1617  6264 14756  4191  6507  1387  2452  9223  2821  6768  9425  6715 14994 11363  6133  1254  1283 15079  7903  7946  9194  3517  3452  5141 ...
15115  4113  3384  3736 14410  4558  6770  2716  5186  6329  1292  2883  2445  7228 14426  2116  2094 11364 11365  6353  6663  3668  3631  1125  4365  9380 ...
2292  2251  1291  5442  5220  2834  1483  1638 11357  7188  9185  2574  8088 15105  2327  6742  7469  6329  6697  5376  4595  2391  7243  7943   968  3518 ...
3540  1886  5376 14402  1790  7125 14864  8149   782  5552  9179  3890  7902  7348 14598  5306 14746  5419  2511  6748  7213   716 11087  9314 10894 11367 ...
1243  3663   968  7978  1511  3959 14511  3927  4150  3416  1875   731 14978  1937  6191  6975  3410  3645  7489  1565  2225  4171  3485  5170 14961 10935 ...
5492  3413  6892  7289  4488  4136  1616 14598  5335  4193  7321  6904  2230  2232 14407  5186  6134  8909  1889  4009 10978  5306  2935   661 15108 14976 ...
8138 11048  4261  7319  2653  6829  3689  7058  1640  7406  2340  5399  2213 11115  9059  2003   880  3933  2292  1168  2252  3687  5317  9027  5548  1753 ...
1871   654  9278  5572  4382  4422  8080  7221  1415  5428  8129  7362  1415  7902  1432  3909  6583  5334  1871 10934 11199  6714  7978 11114  4005  5551 ...
5381  6281  6294  1736  9040 10904  8344  3982 10975  3775 10939   968  3988  3795  6162  2929  6135  9563  7100  6333  4498 10892  3575  1413  5479  7056 ...
3765  2444  7400  6851  3891 14513  2327  6755 14974  8934  6323 14742  4589  6978  3540  5313  8329  1487  2469  3669  3687  5469  2265 14376  7522  1013 ...
4124  8157 11112 10759  6765  7479 11350  6717  1595 11363  5445  3542  3627  3646 11244  8088 14749  2461  7060  3400  5184  5377 14637 14547 14518  7477 ...
7221  8259  3480  7080  3416  4532  2282  1496  8157 14747  3517  1825  2607  3421  6638  3435  8289 15102  4375  9392  6716 10948  8236  7349 11111  1118 ...
1666  2685 10976  5210 14784  4191  7296  5404  8045  3601  2151  3915  7461 14685  8091  6717  7471  1693  3825  8210  6794  2124  4452  3542   900  9609 ...
2314  1464 10922  1743  9194  7120  6792   654  1006  9424  6289 14685  1441  9194  1487  6264   887 11014 14761  1844  2709  2345  9670  1492  8090  7243 ...
3623  2289  1455  8329  8052 14948 14911  8175  1073  7504  2600  6732  4046  4129  8905  2011  6132  3540  7461  1415 10970  9395 14682  3624  7987  3683 ...
9603  9587  7039 14761  7364 11157  1402  2266  1768 10778  2146  6723  7079  2194  6699  3920  7025  2245 15018  3825  9265  5072  2285 10811 14742  8285 ...
9242  1953  2150  4369  1702 11118  1511  2826  9604 15041  5322  7038  9581  2547 10768 10892  2457  7191  2014  3708  6132  9025  4102  1882  5543 10892 ...
14862  6663  3540 11419  3671  6323   680  7965  8099  2269  6252 11117 15054  3663 10937 10933 14424  9299 14487  3776  8329  2059  6770  7021  9582 11142 ...
10901  9262  3890  9601 11111 11116  8175  2485  2620  8050  5307  1760  3890  2085  2355  6765  8259  6889  2391 14797  7408  5511  2327  1823   654  1462 ...
1496  3462  2053  2317  1718  3618  8051 11244  1790   693  7021  9188  1387  9234  4423  5189  1463  2465  6353  8053  2574  7475  3915  6261  3884  7355 ...
14506 14526  3611  3687  7212  2245  4502  3407  6814  1424  4516  5548 14572  1496  5207  7021  2708  1118  8068  6288  1637  2642  7209  2202 11356  3494 ...
2003  9203  1254  6157  7250  1427  2821  3956  1464 14362  2363  6713  7199  4045  6863  6905  6814  7503 11107  2363 11048  7947  2689  6294  5375  3775 ...
5422  4176  1586  8098  3530  5134  5158  3623  5383  4595  1756 10934  2273  1178 11387  8924  4187  9040  3646 10773  2534 15061   933  8124  9546 11114 ...
4264  2690  9194  7223 11363  8101  2361  9396  6200  3542  7055 14514  8064  9062  4190  2835  1877  4512  7903  3469  8202 10765  5413  1296  6715  4343 ...
2678  4220  3600 10810  5112  2245  4372  6888  2258  9601  6294  6622  3462   979 10834  3685  7067  3480  2347   787  4024  6828  8087 11192  1598   902 ...
5155  4519  2913  7100  3720  2344 15105  7979  4024   879  8276  3960 14768  3527  2661  2669  2457  7091  8158  5380 10773  7116  1613   790  6192  4588 ...
9225  1124  4017  8091 10893  8245  6753  4113  1496  2053 14418   724  1717  2706  4135 11114 11401  8124  3495  5099  2197   720  9222  4132  3932  6798 ...
2265  4219  4168 10768  6289  6577  2891  4143  8057 14512  9202  9432   668  5142  4230  7984  2134 11250  7501  2199  4648  4648 15186  2085   927  1761 ...
6279  5173  5492  7504  1483  1706  7367  6893  3636  2477  3956  5543  5230  7093 14655  4570  2447  4432  7213 15102  2532  1953  4155  3498  6770  7995 ...
9585  2592  2134  2213  7466  7928  7503  2082  5451  5504  5381  5498  4201 14447  7981   682  5483   694   788  5376  6292 10948 10856  1084  6753  9602 ...
4597  1462  4532  9194  3960  6766  9273  1475 15103  6624  6723  7514  2917  1895  5425  9192 11045  2589  3951  2295 14684 10934  3540  6768  5153  2607 ...
4432  4411  4112  5418  2259   788  2230  3923  2675  4262   902  9217  6667  6659  3858  2150  5440  6191  3558  1763  7415  9266  9539  6889   635  7504 ...
14378  4291 10924  8129  7215  1648  9062  6191   902  9202  8312  5547  4530  9179  7355  7006 14658  7198  9584 14756  1842  7901  1895 11253 15036  1583 ...
1463  1762  9192 14693 10780 11140  3785  1483  1480  4520  6643  2224  4560 14741  9037  1866   795  5140  6881  4291  8064  9179  3860  7503  1692  5427 ...
2409 14958  5427 10924  6277  9581  4498  2203  7523  6324  2082  2074 11219  2014  1720  2452  4117  5323 10932  7079  7216  8220  7355  2225  2755  4382 ...
9382  2013 14392 15059  6753  7835  6319  7355  9583  2572  5491  6828  2456  8276  3481  1433  7213  1804  3890  2621  2533  9188  9309 10978  5448   776 ...
6716   788  2684  7312 14998  3531  6985  7461  8276  9587  2009   908  8245 14668  9587  9179 14775  5173  2684  8344  2465  7126   643  3721 14642  9225 ...
2534  2999 10871  1200   783  6827  1510  9237  3558  6643  3585  3420  3422  9555  1618  2245  6819  3951  5349  1487  5262 15108  1868  6642  6787 11216 ...
11369  6142 14685  4016  7367  4134  6772 10967  9607  9300  1130  5115 10812 11363  5315  1692  9584  4512   669  3456  6823  6132  6132 11108  5138  5551 ...
9006  4585  8037  7213  3980  1869  6673  2510  4138 10812  7251  3606 14426 10913  1424  7216  5550  2742  5150  6133 11271  9670   855  6643  6974  2663 ...
7100  7135 10934  2273  4113 14594  1496  6134   729  6704  5319  2749  5393 14573 15149  7079  9038  2465  9039  7067  7021  8277  3935  7097 14427  4597 ...
2651  7247 15039   750 11372  7019  3687   758  2245 14513  5166  1763  9038 11088  2875  5157  4204  9039  6762  4145  7362  1235  2526  3775  2284  2861 ...
5428 11149  5245 11363 11006  1413 10888  8285  7197  3585  9266   783  9396  6714  8312  3494  7471  3646  3911  9284   683  9203  4444   729  1548 11333 ...
7033  8211  7461  7056  1561  3626 15002 14933   635  1496  3518  2344 11035   887  3664  8088  4295  5324  9038 14428  4558  9398  7058 14643  2615  6863 ...
6701];

synapseNodesLPLC1{1} = [8559 4087 1674 8553 8544 8677 1683 1682 1682 4087 8559];

synapseNodesLPLC2{1} = [3089  8828  8883  8871  3031  8977  7846  8430  9138  7868  9084  8814 11202  3286  3342  4772  6543  8994  8008  7025  8195  8199  8992  8875  3316  2998 ...
7274  5825  3012  9077  8368  8821  8941  9320  8395  9111  7327  3034  8393  9112 10665  9151  8018  7807  3296  3251  8447  3006  8448  8830  3034  3308 ...
4797  3082  9074 11209  3343  9688  7423  3323  3062  3067  3259  3775  5049  9086  8429  5069  8398  7591  8198  7875  7841  4778  6540  9064  2977  8855 ...
5828  5059  3087  7278  3064  4816  4752  9360  7283  3810  8441  2988  4812  9687  4698  3013  7590  7025  9342  3801  2990  3056  9114  7858  3112  3017 ...
4776  7268  3075  8414  9098  7418  3353  3277  8973  7276  7853  8410  3069  4745  7811  9098  5820  7581 11242  8849  7425  5557  2995  7279  9088  3823 ...
9688  8481  5050  5764 11211  6544  4717  8433  9340  8852  7182 10664  7259  2990  4970  7863  8403  4774  3271  9336  7588  8827  8812  3296  9356  8829 ...
4677  7632  3342  4678  9075  7184  2981  7869  5780  8200  7853  8877  4731  8847  6552  3029  4798  7281  7034  8501  4861  8367  3785  7567  3297  9157 ...
3341  3004  8376  4757  3035  3009  3061  3328  7286  5067  9108  5821  7417  4682  4797  3083  3014  8422  9695  5827  5765  3022  9074  7283  3089  3252 ...
8393  6553  8948  7567  9118  6546  8007  4801  5782  8876  9685  3014  5557  9137  8393  4731  2900  3814  9346  3028  4833  8436  8425  5764  8980  6912 ...
7818  4714  8162  7272  2993  9695  3818 11213  5060  9156  8113  3258  9342  8401  3223  6540  7577  3017  9686  8482  3024  7170  5060  8410  4743  7425 ...
7159  3245 10665  9118  8467  3023  8383  7158  7998  8405  6625  4937  9066  3218  9075  9103  4701  8009  5059  9689 11171  6543  4856  3246  3298 11202 ...
8686  4801  4807  7802  8971  2983  8831  2993  7265  4746 11207  8441  4972  8694  7327  2989  7577  4755  8980  4803  5557  6523  8367  8686  8348  4713 ...
3285  9074  3074  5825  4860 10673  9681  3257  8869  8415  3013  4775  7266  9001  3216  7839  7429  8363  5049  8007  8012  8985  3276  8881  4778  9131 ...
4732  3087  3814  8693  2993  9085  3810  3233  2999  4971  5065  8408  8011  3243  4970  4752  7590  7875  3219  8367  5560  7809  9067  7203  4696  4701 ...
9075  3230  3243  4800  3821  8420  3075  7275  8425  7169  5059  9123  7280  4803  4695  8018  7180  5780  4753  3316  8377  8953  9064  7866  2990  9096 ...
8815  8467  4971  4754  5763  4699 11172  7262  8861  4799  7802  4852  5776  7256  3034  9129  8812  7043  9690  7868  8447  7041  7170  4707  5764  3224 ...
9101  4749  7592  3781  8849  7285  7268  8876  8475  3223  3811  9152  8373  7273 10673  4856  3276  4682  8116  4798  9144  3063  3030  8378  9130  4715 ...
7256  8370  3299  8488  7600  3798  7816  7607  8977  7210  9109  8018  4731  8832  4823  3316  6555  8376  8468  4807  4773  3786  3846  8460  7858  3243 ...
3296  3296  8870  8486  4756  3029  4755  3088  3786 10664  7567  7177  7423  8864  8015  4678  7042  6549  5070  2984  9147  3317  4670  4744  8832  8006 ...
4747  9151  8815  3251  9686  3292  8005  3241  9161  2908  8500  8847  4739  9689  4799  8833  7034  7581  8388  8436  7573  3303 10664  4741  9068  4972 ...
8395 10666  8195  7802  3817  7420  8450  8812  3781  8395  9076  8385  6531  3058  3174  4778  3059  8875  4858  8013  7280  3341  7205  8827  7327  3027 ...
4837  7607  9154  7181  8468  8007  7268  9700  5820  3085  8511  7821  9331  4856  6546  8406  3781  8446  7597  7833  9319  7253  9322  8398  7026  2989 ...
9332  7635  8007  8830  8017  4677  3085  6532  8864  4938  8972  5060  8480  3234  8995  7288  4859  8881  9352  8367  4880  7851  7862  3090  7092  9102 ...
10761  3843  3279  8399  8365  2989  3013  5554  4727  3017  3262  5765  8858  7253  8363 11193  5559  3088  9123 10666  3293  9117  6546  7174  3252  7424 ...
3264  3275  3285  4728  8996  4869  9081  8344  9350  8978  7181  7860  3339  7803  4812  3793  7426  8943  3292  9331  4938  9076  8816  7574  3273  8018 ...
3221  9085  8867  4814  9701  7042  7867  5049  3279  7861 11241  7180  3088  3315  7090  3068  7574  3016  6533  4777  5069  7028  8875  6544  9110  4952 ...
4857  8007 10664  7287  7852  3340  4744  9064  9332  7267  8005  9116  7171  4728  9682  8996  4870  9162  7865 11205  5559  3023 10670  9064  8013  4752 ...
7874  5776  7162  8433  8461  9127  9685  5775  3266  3236  8852  3304  3316  3113  7818  8408  8823  3854  5764  3310  9145  3292  9116  3052  9332  7417 ...
3812  8948  7858  3308  5763 10673  8386  9336  7836  7029  8843  8398  8177  7615  9088  9149  3244  5827  4833  3264  8161  7875  2984  9332  4794  7843 ...
7030  8964  6545  8392  4779  3219  7182  3246  8816  7861  4830  8499  7824  7423  8012  8389  7595  8937  8161  4756  9351  3307  4888  4798  3019  4970 ...
6551  3223  3293  8392  9118  4824  4968  9154 11207  3020  3034  7207  3272  4937  9684  7158  5561  3286  3013  3352  3300  7811  9680  3058 11172  7567 ...
8979  3033  6552  3060 11203  7840  3143  3027  9128  9684  8390  9322 10665  4779  8398 11204  2990  7805  4708 11170  2901  7269  5569  3335  7417  4704 ...
3221  5060  5820  8400  7817  2989  7203  8439  4812  4851  7207  8399  3001  4952];



% - intree::integer:index of tree in trees or structured tree
% - color::RGB 3-tupel, vector or matrix: RGB values {DEFAULT [0 0 0]}
%     if vector then values are treated in colormap (must contain one value
%     per node then!).
%     if matrix (N x 3) then individual colors are mapped to each
%     element, works only on line-plots
% - DD:: 1x3 vector: coordinates offset {DEFAULT no offset [0,0,0]}
% - ipart::index:index to the subpart to be plotted {DEFAULT: all nodes}
% - res::integer>1: resolution for cylinders. Does not affect line and
%     quiver or blatt. {DEFAULT: 8}
% - options::string: {DEFAULT '-p'} has to be one of the following:
%     '-b'  : 2D pieces are displayed on a 3D grid (-b stands for -blatt)
%             showing the diameter but not as real cylinders. Output is a
%             series of patches. Fastest representation.
%        '-b1' : patches are mapped on x y {DEFAULT}
%        '-b2' : patches are mapped on x z
%        '-b3' : patches are mapped on y z
%     '-p'  : correct cylinder representation but not yet flawless and a
%             bit slower than "blatt" representation.
%     '-2l' : 2D (using only X and Y). forces line output (2D), no diameter
%             (slower), color is mapped independently of matlab, always
%             min to max.
%     '-3l' : 3D. forces line output (2D), no diameter (slower, as '-l')
%     '-2q' : 2D (using only X and Y). edges are represented as arrows
%             (using quiver) . Color vectors do not work.
%     '-3q' : 3D. edges are represented as arrows (using quiver, as '-q')
%   additional options:
%     '-thin'  : all diameters 1um, for line and quiver linewidth 0.25
%     '-thick' : all diameters + 3um, for line and quiver linewidth 3


figure
%plot_tree(trees{1},[0 0 0], [0 0 0], 1:6857, 8, '-p')
plot_tree(trees{1})%,[0 0 0], [0 0 0], 1:6857, 8, '-p')
view(180,0) %azimuth, elevation



axis xy



figure
for i = 1:2
    %subplot(2,1,i)

    [xdend tree] = xdend_tree(trees{i});

    yvec= Pvec_tree(trees{i});
    wscale = 1;

    idpar = trees{i}.dA * (1 : size(trees{i}.dA, 1))'; % vector containing index to direct parent
    idpar (idpar == 0) = 1;
    X1 = (xdend(idpar) ) ; % coordinates of the nodes in dendrogram
    X2 = xdend           ;
    Y1 = yvec(idpar)     ;
    Y2 = yvec            ;
    
    X1all = [X1; X2];
    X2all = [X2; X2];
    Y1all = [Y1; Y1];
    Y2all = [Y1; Y2];
    
    X1all = [X1(1:end); X2(1:end)];
    X2all = [X2(1:end); X2(1:end)];
    Y1all = [Y1(1:end); Y1(1:end)];
    Y2all = [Y1(1:end); Y2(1:end)];

    HP = line ([Y1all Y2all]', [X1all X2all]');
    set (HP, 'color', 'k');
    
    
    xpositionsLC4 = xdend(synapseNodesLC4{i})';
    ypositionsLC4 = yvec(synapseNodesLC4{i})';
    hold on
    rgbValues_LC4 = [0,0,1];
    plot(ypositionsLC4, xpositionsLC4, 'o', 'Color', rgbValues_LC4, 'MarkerFaceColor', rgbValues_LC4, 'MarkerSize', 3)

    xpositionsLPLC1 = xdend(synapseNodesLPLC1{i})';
    ypositionsLPLC1 = yvec(synapseNodesLPLC1{i})';
    hold on
    rgbValues_LPLC1 = [1, 0, 0];
    plot(ypositionsLPLC1, xpositionsLPLC1, 'o', 'Color', rgbValues_LPLC1,'MarkerFaceColor', rgbValues_LPLC1, 'MarkerSize', 3)
    
    xpositionsLPLC2 = xdend(synapseNodesLPLC2{i})';
    ypositionsLPLC2 = yvec(synapseNodesLPLC2{i})';
    hold on
    rgbValues_LPLC2 = [1, 0.647, 0];
    plot(ypositionsLPLC2, xpositionsLPLC2, 'o', 'Color', rgbValues_LPLC2, 'MarkerFaceColor', rgbValues_LPLC2, 'MarkerSize', 3)

    ylim([0 900])
    xlim([0 300])
    
    
end

set(gcf, 'Position', [0 0 900 500])
set(gcf, 'renderer', 'painters')
