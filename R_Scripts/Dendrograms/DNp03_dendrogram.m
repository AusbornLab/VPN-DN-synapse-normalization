%path(path, '/Users/jamesjeanne/Dropbox/Jamie/Code/Utils/TREES1.15/')

close all
clear all



start_trees
load_tree()

synapseNodesLC4{1} = [13034 12296 12524  9566 10605  9479 12808 12450 13080  9007 11116  9798  9720 12885  8746 11055  9674 12385 11357  9606 11144 13324 13383 11321  8851 13345 ...
8803 12768  9974  8459  8146 12516 13165 12501  9616 10371 13034  8802 13340 13326 12687  8737 11332  8386 12292 13104 10154  8797 12302 13362 13384 13279 ...
8340 13208  9701  9004 11404 10363  8517  9009  8432  8605  9434 12502  9063 10297 10818  8470 10386  8524  9608 10672 10208 13389 11076 13232 10347 12408 ...
13388 12735  8394 11132 10640 12304 13349 12493  8598 13105 12268 11287 11497 11289  8333 12885 11320 11373 12963  9691  8288 11370 12314 12964 10438 11499 ...
8461 13356 12340 13289 13402 12340 10827 10225 11426  8835  9017  8808 12484 10470  9669 12987  8122 12390 13139 10629  8143 13035 10937 13109 13228 13342 ...
12694 11265  9615 12450 13260 11043 10684 13342  9411 11217 11201 10943 11263  8156 13367  8146 11177 13384 13170 12272  8574 10388  9623 10818 11315 13279 ...
10724 11225  8809 11217 10634  9050 11119 12690  8428  9663 10728 10360 11461 10364 12670  9813  8288 13307  8605  9049 10449 10359 13202  8295 11227 10462 ...
13377 10356 10971  8462  9606  8680 10329 11235 11261 10462 10746 12571  9978 13103 12485  8343  8385  9802 10592 12357  8142  8477 10972 12981  8801 13127 ...
12444  8814  8693 10771 11044 11140  8470 10767  8273 11026  9664 10829 10811  9427  9603 13365  8808 10653  8600 10446 11055 13107  9602  8725  8372  8382 ...
9787  9031 12903  8446  8371 12487 11172 12316 12961  8553 13377  9648 11068  9711  9030 11354 10392  9463 12568  8344  8631  9015 11397 13366 11144 12334 ...
10329  9721 11322 13389 13165 12690 11239  8604  9673 10217  9579 12356 10722 12341 10705 12279  8765 11348  8455 11079  8992  9058  8296  9599  8694  9429 ...
8670 10594  8156 11384  9801  8764 11225 10801 12963 10608  8139  8855 11529 13277 10226  8383 13096 10255 13209  8779 11145  8468  8987  9425 13228 13376 ...
9712 12484  8764 13390 10218  9425 11144 13366 10442 10723 11061  8142  8156 13322 10390  8155 10448 12734 12688  8803  9006 12494 13046  9485  9615 10449 ...
10430 13330 12375 10715 10156  9045 11073 11075  8140 11390 10819  8584  8447 10007 13395 11290 11116 10604 11418 10676 13290 10358  8357  8844  8142 11354 ...
11315 10350 10449  8143 10450 10357 12713 11221 11130  9042  8448 11129 10751  8446  8344  8333  9044  8268 11525 12735 13132 10653  8995 10371 13260  9714 ...
11091 10707  8469 13382 11311 10767 10443  8155  8809 10450 10460 11357 12918 10420 10349  8337 10745 12715  9649  9014 13272 10972 10812 10387  9627 10421 ...
9698  9044 10208 11231 11260 11292 11257  9484 10828  8523 10350 13232 11395 12487  8287  8814 11404 12302 12883 12288 11218 11482 12696  8477 10594  9674 ...
12885  9602 11385 12364 12383 10937  8389  8680  8288 10358 13173 12884 10483  9047 13259 10697  8448 11237  9413 12370 12288 11404  9059 10677 10612  8612 ...
9488 13399 12310 12557 10691 13401 12981 11225 10208 10660  9057  9788 11398  9616 11290 13367 10708 10617  8999  8682 12735 13208  9034  8462 11395 10766 ...
8599 10348 10729 11236 13336 11226 11115 10813 10723  8627 11071  9675  8141  8853  8356 11119  8165  9062  8162  8165 10609  8716  8296  9061  9061  8341 ...
8715  9053 10341 10281  8163  9061  6745];

synapseNodesLC22{1} = [2044  3290  2965  2831  2386  1969  2876  2704  1749  4500  1728  1783  2429  2732  2428  2439  2117  2036  1798  2108  1784  2726  2568  4384  2091  2885 ...
2942  2725  2674 15114  2668  2153  2663  2575  2665  2158  2674  1751  1764  2059  2037  1973  4252  4361  2582  4406  1303  1761  2956  1716  4491  4956 ...
4510  2044  3900  1718  4496  2448  2593  2060  2411  2037  2413  2412  1739  4378  1781  1148  4511  1718  2724  2060  2146  2073  4940  1719  2036  2155 ...
4261  1714  4504  2575  2637  2636  1972  2951  2147 15114  4254  1753  1715  2040  2637 15115  2962  1726  2133  2716  1145  2670  2036  2831  4398  2663 ...
2043  2829  2570  2883  4382  3215  2692  4520  2133  1785  2870  2649  2521  2044  2039  2046  4515  4519  2928  4489  2942  2961  2581  1723  2928  2117 ...
4378  2157  1783  4378  2147  2049  2669  4363  4943  4367  4501  3727  2145  2117  3885  2706  4502  2720  2036  4517  2706  2863  2435  2923  2384  4481 ...
1789  1716  4488  2416  2687  2640  3318  2732  2440  2432  4377  2147  2940  2117  4284  2896  1781  2041  2140  2386  1799  2381  1711  1728  2665  2720 ...
2059  4362  4481  2707  1294  1764  4511  2831  2687  1081  2859  2048  2386  2384  2593  1718  2635  2412  2732  2033  3215  2568  2672  4497  1783  2156 ...
1142  2716  1142  2954  4254  3215  2641  2966  4253  2829  4498  2430];

synapseNodesLPLC1{1} = [6745   947  7911 10230 14700 14395 11565  6913 14547 14122   740  5950  7962  5295 14826  5545  6797  8036 10252  6957  7354  6770  6742  8046 11918 11681 ...
6776  7779 14713  5794 13761  9134 11924  7170 14826  7940  6941  9314  5488  6535  6900  6642 14530  5331  7313  7214  5840  9317  6882   862 14500 13848 ...
1018 14061  7183 14606   735  5863  9226  8040 14509  5636 14451  5902  7906  6808  6771 11770  8124 10289  9090  5740  9308 14046  9383  5325  5834 11793 ...
9141 12112   963  6959  6966 10287  6551  6584  5931  5933 14227 14394  5874  6921 14721 14655  6550  7265  9307  7367 11907  6900 14358  6505 12054 14666 ...
6788  9260 14140 14574  6582 14500  5941 12090  9354 14767  6926 14666 12069 14095  7906   832  6545 14804 14602 13744  7932  6594  9365  5711 14336  7186 ...
11746  5348 14815 14536   978 14558 14820  9266  9352  7363   768 14761 14797  7338 14559  5919  5589  7329 13851   768  1030  5574 14102  6485 14485 12104 ...
5943 14069 13773  6890 14796 14504   757  5350  6614 14123  5869  5318  1010  5524  1030 14709  9212  5824  9379  5961  7225  7834  5539 11565  6907 15002 ...
11791 14508 14044  5795  6687 14827  9273 14069  5947 14539 13758 14198  5974 13795 11573 14149 13825   971  7806 14143 14135  7982  7932  6558  9310  8041 ...
14834 13763 14261  5637  5686  6944  6952  6924  9224 12089 12072 11649  9207  5413  5294  6972   901 14340  6906  5785  9221  6488 14636   900 14375  6804 ...
1035  6906 14534  7344 11569 13738  1032 13470 14390  5296  9235 14605  5958  7900  7352  1019   784  5851  5971  5529  6646  1000  5686 14357 14426  5329 ...
5812  6883  5688 14679 14536  1015 12067  5456  6932  9266  6607 14801 14399  6475  5845 12124 13413  6804 12107 14786 14557 14048  9381   954 13800 13742 ...
11676  6570 14414 14370 10288  7803 12082  6456 14600  5862 13433 14759 14482  7239 13724  6535 14541  5738  1041 14352  5623 14842   909 14346 14048 11650 ...
11923 11770  6546 14618  7330  7301 14482 11770 10288  5530  1012  5405  9341   992  9372  6942 13772  6891  7315  6557  5608  9204 14483  1011  6960  5826 ...
5329   741  9275  7099  7242  7808 14482 11797 14087 14044  5703  7285  6580  5463 14650  7336  7354 11792  7162   994 11908 13776 14496 14554 14504  6644 ...
5498  5971 11762 14199 14360   906  5408  1032  7843  7359 14388  5904 11643 14134 14763  5905 14131 12073 13718 12123 11579  6608  5928 14519 14723  6806 ...
5456 14822   907 14160 14353  5904  5704 14066  9337 14048 14786  5838 14336  5594   973 11601  5718 14485 14371 11785 11762  5485  5828  6922  7364 14393 ...
9247 13771  7117  6708  6461 13430 14508   760 14339 13848  7324 14034  6636 11905  5845  9336   914  6804 14221  5869  6734 14387 11770  5711 14261   738 ...
5482  8029 11587  5311  7333  9304  7306 14123  5328 14522  9341   858  5413  5276 15007 10249  5699  5307  9206  8037 14832  6536 14505  7202 14832  5277 ...
12078 14166  5576 11778  6709  3157  5690 10276  5356 13842 14045 14387 14365  7271 14151  5948 14709 12052 14383 11568  6795  5805  6967 14406 14071  9382 ...
14494 11914 14026 14557  9374  5354  6932 13794  9246  5646 14548  9215  6811  5985  5521 14061 14139  5875  8125  5473  6804 13734 13800  1021  5947 14508 ...
11676  1007 14057  5462  6907  9380   942 14030  6941   783 11655  7903 14679  7901  7223 13729 13777  6938 14184 14695 14370 12124  7807  6718  5306  9107 ...
14453  8008  7204 13725 14482  9266 14394 14509  7907  6933 12111  5949  7174 14497  6745  6606 14522 14031 14578  7242  7838  8006 13841 14361  5491  6927 ...
12081  7267  7186  7309 11645 13410 11612 13794  7360   830  6542 14137 14208  5594 13718  9282 12097  5840  6769  6460 12057   971 11565 11782  6802   757 ...
7264  9139 10270 14515  6900  9141 14383 13431 15192  5982 14164  5628  7312  7916  7338 13718  5849 14036  1017  9195 14653   943 13421 11579 14694  7327 ...
9119 11899  7348 14086 14180 14607  5844 11802 12071  5489  7983   994 13744 14382 14517 15005 12079 13763 14174 14101  9183  6957 14072  1018  5419  5985 ...
14445  7960 11612  5604  6575  7186  7124 14022  5400  6561  7847 14365  3152  5411  6594 14221 14755  5285 14506 14100  5684  5512 11745 11762 13764  5539 ...
859 14612 14793 12123  5849 10267 13410 14754 14361  6563  8036   903 14710 14242  7789  5824 15189 11660 14240  1037  7449  5852 13413  6485  9204   999 ...
9247  5827 14037 14452  8065   997 12085 14518  9341 11785 14507  9276 14589 14657 14383 11642 11896   979 14098 14611 14407 13412  8091  5848 14058 14796 ...
11904  5691   941 11584  5446 14642  6965 13768  9132  7778 13430 14057  1013  6471  9382 13818  5629 12119   901  7194 13730  7244 14521  6471 14076  7265 ...
7238  5931 10285  1017  7788 14158 14122   980 13746 11791  8052 14811 14184 10284 14527  7829 13842  5721 14360 14612 11611  7314 12067  9226  5327 14701 ...
13831 14798 11573  7806  8033  7301 14482  5305  9270 11566  6633 13804  7963  7455  6661  5325 14639  7348 14088 14043 14609 11658  6646 14808  7236  5795 ...
6544 14552 13418  6818  7226 14521 14365  5629 14796 14650 11667 14519 13841  5457 14033  9304  5827  9140  6708 11906  9260 14569  5479 14213 14210  6681 ...
6776  7097 14208  5270 14818 14178  6919  6566  7931  6826  5686   836  6486  3152 15187 14361  7118 13711 14373  5824 14086  7167  1037  5719  7310  8053 ...
7101 11583  5312  6572 14077  6822  7243  5349  7805 14061 13830  5267  6805 14590  9221  7841  5827  7894  9214  1045  7944  9247  7829 11773 14519  5608 ...
6542  7941 14597 11643 12126  6894  5454 11919  5911  9367 11786 14445  5650 14727 14701 14362  5595  5986 12128  7363 14133 15187  9321  6906  6566  9119 ...
6584 12061  6744  1003  5479  6715  6731 10286 13763  6958  6476  6921   764  5412  7260  5260  7203  6588  9342  9381  5684  6584  6550   908  7185 11762 ...
9116  7315 14246  7162  9313  7118  7788 14494   900  5739  5322  5304  9247  5476 13808  6913  5483 11565  7096 14332 14376  5931  7315  6793  6629 14062 ...
856  5961  5720 13723  7316  5608  5960  5316  5301 12085  6681  8043  1007 13415 14482  7318  6717 14451   759  6768 14158  7226 15191 14346  5704  8043 ...
6514 14391  5710  5471  7236 14390  7798  5818  6577  6918 15188 15001 14343  5286  6543 13798 11575  5711  6735  7785  9252  6567  9318 14415 12076  9267 ...
14755 14660  6634  6629  8058  5457  9308  7938   824  6581 12072 14485 10288  6812  9145 12111 15190  6767 11601  7186  9319 14487 11588  6970  7198 11564 ...
14548   995 15187  7240 12088 10284 14602 15006  6687 11922 15188 14523  9113  5517  5355  7215  8059  1006  5546 12118 14208 13819 14598 14589 12085  7896 ...
7175  9183 14839  6735 14113  7196  7202  5441 11650 14483 14567  7228  9065 12103  1022  5903 11642 11576  5321 14160  6610  5498  6461 14208  7325 12074 ...
11787  5716 10263  7230  5316  5316 12080  6517  9254  9254  9304];

synapseNodesLPLC2{1} = [10681 11267 11267 11275 10538 10742 10538 10526 10533 11523 10526 11276 10537 11144 11267 11275];

synapseNodesLPLC4{1} = [13935  3380  1548  2098  4351  4013  4440  4980  4906  3447  4092  2221 15219  5192  1392  4041  4243  2739  1575  4918  3456  4845  3892  3622  1536  4047 ...
15095  1448 14306  4103  1085  1701  3694  1737  1755  3905  3590  3252  5106  1610  3585  3207  3695  3695  3373  4784  2212  5076  4090  4206  4093  4673 ...
3464  1477  4252  4083  1255  5100  1390  4218  4178  3942  1430  2489  1390  4578  4243  3383  2125  4168  2224  3665  3064  4314  1275  1401  2766  3636 ...
4185 13956  4052  2200  3632  2834  4763  2126  4797  3267  1633  3051  3026  1574 13935  2996  4837  1369  3218  1489  1389  3248  4916  1099  1130  3974 ...
2123  1159  3897  3502  3693  5197 13933  1325  4658  4883  1528  1390  3637 13929  3723  3042  4561  3983  2656  3201  1162  4841  1529  2136  5208  2086 ...
3417  1165  1434  4577  4351  4905  2125  2518  2099  3096 13565  4551  3066  4628  3216  1269  3206  3206  4038  3882  4370  4588  4243  4115  3591  1458 ...
2789  3946  3613  2733  2546 15125  4109  4091  4705  1089  2451  1420  1307  1677  1242 15143  3435  3206  2125  1509  3497  3302  1473  4900  1177  4436 ...
1487 14290  3424  4152  3433  3104  3695  3819 15100  3890  2195  3029 15449  3190  3055 15096  4717  4293  3066  4581 15451  4013  2729 15440  3875  1083 ...
3246  4209  3443  1472 15112 15098  2611  2199  4880  1243  4028  1545  3242  1215  4836 15227  3260  5075  2507  3976  1427 15443  3337  3596  2753  4281 ...
2222  2832  1698 15106  4691  4150  4548  3907  1464  3441  4168  1476  4082  2736  1391  1390  3107  1236  1084  3642  2114  3040  4802 15163  3406  1165 ...
3028  2206 14010  4440  1520  1166  4235 15459  2541  3719  3208  3486  3927  3050  2163  3351  1418  3621  2604  3032  4050  4764  3266  1576  3961  3436 ...
1593  4828  2625  4238  3066  3555  3905  3411  1253  4372  1482  1172  4088  4152  4781  4635  1502  1131  2077  1402  3355  5167  3403  2164  4218  4986 ...
3874  3225  4709  4711  5099  3481  5167  2214  4801  3022 15146  1579  3968  4242 14287  2454  4095  4695  3973  3838  2959  2543  2473 15160  3876  2107 ...
1484  4276 14302  2815  2612  4902  3395  3836  2590  4793  4578  1224  1377  4206  1602  1485  4580  1249 15095  3819  3264  1637  4802  5028  1472  1182 ...
4965  3877  3563  1194  3351 14007 15143  3979  4751  4802  3637  7144  1331  1270  1112  4083  3776  4764  3457  2975  3352  2212 14290  1293 14304  1390 ...
3432  3373  1281  2361 15514  1539  3483  2455  2630  1474  4656  5039 15228  1186  4229  5060  1779 13709  3370  4840  5033  4543  1133  2217  4703  1111 ...
2457  1601  1437  3627  3616  4152  1668  3263  4640  3002  1271  1422  4155  3957  4096  1510  2623  1250  3384  1592  5209 15439  4456  1272  7145  3453 ...
1225  1468  2090  2947 14299  2169 15126  3018  3983  2549 14293  4043  5048  4111  3328  1558  3048  4753  1111  3422  3783  3056  1528 15523  1672  4671 ...
4553  1554  4986  4594 15241  2162  1183  4112  4324  2457  4917 15219  1398  1419  3006  2488  4095  3341  4646  4884  4221  5208  2092  1779  4639  1092 ...
1177  4709  2161  5068  4703  1611  2682  2441  2967  4292 13959  1418 15163  3229  4788 15120  3630  3865  4556  3352 13934  4078  2086  1494  4699  1317 ...
3913  3505  1538  2736  3218  4912  4430  4907  5200  4541  1434  3763  3064  3818  4276  1401  3241  3346  3778  5096  4696  4168  4228 15168  1126  4697 ...
4314  4351  1289  1209  2163  3217  4112  4231  3891  1660  4772 15164  3395 14292  3444  4879  4542  1210  4046  3495  1557  2464  4216  4053  1432  5081 ...
4765  4584  2644  3894  4297 15095  5179  4659  1421  4050  3199  4763  3719  3225  3916  2729  3435  3923  2108  4901  5105  3617  1644  1529  1452  5000 ...
3076  1331  1473  1382  4635  2094  1594  1675  1672  4962  3984 14011  3880  3322  1494 13564  3210  2165  2983  1192  4293 15160 15158  4722  1512  2624 ...
1388  4470  3877 15457  4089  1307  3243  3222  2190  2452  1635  5198  2644  1233  1585  4217  1157  2444  1432  5180  7143  1113  4031  4242  4733  4031 ...
3199  1206  2516  3870  4759 15160  4707 15451  1224  1249  2758 15144  3409  3781  4672 15450  3338  3103  4053  3106  4086  4306  4830  4652  4281 13708 ...
4984  2444  1324  1574  3440  1539 13958  5179  3832  3329  4986 14011  4695  5032  3943  1378  3595  4723  4883  4892  4840  4589  3785  2074  4993  1692 ...
2555  4840  5034  1178  3725  1525  3044  4570  1151  4578  2171  2766  5068  2121  3962  3018  3754  4030 14015  1188  1642  1159  4577  3728  4216  4938 ...
13937  1397  3693  4525  3812  1731  4344  4319  3739  1634  4965  2489  4242  4416  1187  1157  3828  3477  4942  2455  4213 15127  3909  5089  3062  1592 ...
1473  3773  1166  3914  1738 15442  1238  1579  3242  4623  3080  4711  1110  1515  3201  1437  4064  4594  1744  5052  5032  3740  4682  1257  4742  3064 ...
15524  2202  3222  4746  4179  4101  4622  3443  1603  4145  5051  1220  3476  1584  1326 14289  3836  4527  4071  2462  4589  4588  4900  5055  2489 15109 ...
15128  4352  3981 15451  4217  3035  3028 13708  3610  1271  3227  4705 15113  4229  1186  4763 15113  2980  4619  3370  4282  1165  4349  2441  4827  5073 ...
2750  2361  3309  4370  1494  1494  2166  4809  4419  1458  2427  4672  5212  1305  1090  4560  4366  4659  1273  3740  1256  1597  4770  2663  3873  1762 ...
1382  1567  1431  3000  2560  1388  1223  3350  3921  1566  2680  2994  1458  2802  3279  3320  2753  2802 15104  4736  2543  2093  1593  5000  5062  1647 ...
15451  4826  3105  3464  1098  2557  4993  4530  4051  1599  2601  3352  4041  3026  1446  5171  4766  2657  5081  1177  3288  2099  1510  4206  1655  4987 ...
3316  1737  3435  3478  4870  4772  4536  5106 13938 15096  1166  3261  4797  1268  4681  4694  1245  1363  4238  1664 14292  3719  3744 15454  4115  5079 ...
4579  3719  1331  4883  2539  2647  4545  2119  1663  4322  1101  3977  4689  3048 14299  3442  4718  4549  1494  3252  4042  1763  4145  2800  4099  4870 ...
4660  1237  3002  1499  5033  2088  2990  4701  2507  1509  4838 15112  4078  1207  3895  3066  4195  1291  3443  5094  1582  1448  2628  1373  4271  1326 ...
3435  4372  2532  3828  4705  4913  2087  2972  1468 14325  2441  3719  4900  5061  3794  2988  1180  2462  5179 15113  3859  2124  4763  1418  4442  1157 ...
1236  2967  1111  1596  1540  1670  1420  1149  4992  3191  4735  3102  3731  3698  4374  3056  4920  1692  1272  3248  2554  4593  3638  5056  1381  1695 ...
2811  3588  4196  3296  2663  1339  3001  3421  4720  3774  4877  1551  1225 15224  4905  3423  3347  4158 15212  4148  3910 14305  1682  2972  3731  4214 ...
4101  4587  1368  3887  4418  3031  3095  2114 15512  3728  1664  4994  1131  3080 15228  1680  1244  2645  4617  3436  5081  2663  4299  3916  2811  3306 ...
1757 15450  3447  1522  1192  2031  3910  2853  2738  1432 15214  1536  2984  4883  1421  4344  4729  4771  4710  4911  4168  1755  3281  4646  1151  3049 ...
4553  4675 14007  3199  1094  3482  4219  5177  3338  2186  2464  1172  2812 14290  3984  3916  1165  2123 13936  1500  2161  4091  1380  4254  4736  2457 ...
1519  4294  3241  4672  4691 13565  4151  2126  3942  3234  1663  5166  3785  2671  4078  4942 13961  1159  4299  4186  1338  1384  5098  4297  4851 15524 ...
3588  4843  5167  4123  1440  3481  4079  4235  5203  1554  1290 14005 15160  3927  1777  2982 14285  5203  4866  4568  4016  3859  4048  5190  4048  4313 ...
5082  4806  5194  3939  1263 13551  5193  5178  7043  4866  5094  5202  7043  4819  2839 11727  5177 11707  3046  4016 14286  3413  3444  1258  5194  1604 ...
11716  4689];


% - intree::integer:index of tree in trees or structured tree
% - color::RGB 3-tupel, vector or matrix: RGB values {DEFAULT [0 0 0]}
%     if vector then values are treated in colormap (must contain one value
%     per node then!).
%     if matrix (N x 3) then individual colors are mapped to each
%     element, works only on line-plots
% - DD:: 1x3 vector: coordinates offset {DEFAULT no offset [0,0,0]}
% - ipart::index:index to the subpart to be plotted {DEFAULT: all nodes}
% - res::integer>1: resolution for cylinders. Does not affect line and
%     quiver or blatt. {DEFAULT: 8}
% - options::string: {DEFAULT '-p'} has to be one of the following:
%     '-b'  : 2D pieces are displayed on a 3D grid (-b stands for -blatt)
%             showing the diameter but not as real cylinders. Output is a
%             series of patches. Fastest representation.
%        '-b1' : patches are mapped on x y {DEFAULT}
%        '-b2' : patches are mapped on x z
%        '-b3' : patches are mapped on y z
%     '-p'  : correct cylinder representation but not yet flawless and a
%             bit slower than "blatt" representation.
%     '-2l' : 2D (using only X and Y). forces line output (2D), no diameter
%             (slower), color is mapped independently of matlab, always
%             min to max.
%     '-3l' : 3D. forces line output (2D), no diameter (slower, as '-l')
%     '-2q' : 2D (using only X and Y). edges are represented as arrows
%             (using quiver) . Color vectors do not work.
%     '-3q' : 3D. edges are represented as arrows (using quiver, as '-q')
%   additional options:
%     '-thin'  : all diameters 1um, for line and quiver linewidth 0.25
%     '-thick' : all diameters + 3um, for line and quiver linewidth 3


figure
%plot_tree(trees{1},[0 0 0], [0 0 0], 1:6857, 8, '-p')
plot_tree(trees{1})%,[0 0 0], [0 0 0], 1:6857, 8, '-p')
view(180,0) %azimuth, elevation



axis xy



figure
for i = 1:2
    %subplot(2,1,i)

    [xdend tree] = xdend_tree(trees{i});

    yvec= Pvec_tree(trees{i});
    wscale = 1;

    idpar = trees{i}.dA * (1 : size(trees{i}.dA, 1))'; % vector containing index to direct parent
    idpar (idpar == 0) = 1;
    X1 = (xdend(idpar) ) ; % coordinates of the nodes in dendrogram
    X2 = xdend           ;
    Y1 = yvec(idpar)     ;
    Y2 = yvec            ;
    
    X1all = [X1; X2];
    X2all = [X2; X2];
    Y1all = [Y1; Y1];
    Y2all = [Y1; Y2];
    
    X1all = [X1(1:end); X2(1:end)];
    X2all = [X2(1:end); X2(1:end)];
    Y1all = [Y1(1:end); Y1(1:end)];
    Y2all = [Y1(1:end); Y2(1:end)];

    HP = line ([Y1all Y2all]', [X1all X2all]');
    set (HP, 'color', 'k');
    
    
    xpositionsLC4 = xdend(synapseNodesLC4{i})';
    ypositionsLC4 = yvec(synapseNodesLC4{i})';
    hold on
    rgbValues_LC4 = [0,0,1];
    plot(ypositionsLC4, xpositionsLC4, 'o', 'Color', rgbValues_LC4, 'MarkerFaceColor', rgbValues_LC4, 'MarkerSize', 3)

    xpositionsLC22 = xdend(synapseNodesLC22{i})';
    ypositionsLC22= yvec(synapseNodesLC22{i})';
    hold on
    rgbValues_LC22 = [1, 1, 0];
    plot(ypositionsLC22, xpositionsLC22, 'o', 'Color', rgbValues_LC22, 'MarkerFaceColor', rgbValues_LC22, 'MarkerSize', 3)

    xpositionsLPLC1 = xdend(synapseNodesLPLC1{i})';
    ypositionsLPLC1 = yvec(synapseNodesLPLC1{i})';
    hold on
    rgbValues_LPLC1 = [1, 0, 0];
    plot(ypositionsLPLC1, xpositionsLPLC1, 'o', 'Color', rgbValues_LPLC1, 'MarkerFaceColor', rgbValues_LPLC1, 'MarkerSize', 3)
    
    xpositionsLPLC2 = xdend(synapseNodesLPLC2{i})';
    ypositionsLPLC2 = yvec(synapseNodesLPLC2{i})';
    hold on
    rgbValues_LPLC2 = [1, 0.647, 0];
    plot(ypositionsLPLC2, xpositionsLPLC2, 'o', 'Color', rgbValues_LPLC2, 'MarkerFaceColor', rgbValues_LPLC2, 'MarkerSize', 3)

    xpositionsLPLC4 = xdend(synapseNodesLPLC4{i})';
    ypositionsLPLC4 = yvec(synapseNodesLPLC4{i})';
    hold on
    rgbValues_LPLC4 = [0, 1, 0];
    plot(ypositionsLPLC4, xpositionsLPLC4, 'o', 'Color', rgbValues_LPLC4, 'MarkerFaceColor', rgbValues_LPLC4, 'MarkerSize', 3)


    ylim([0 1500])
    xlim([0 300])
    
    
end

set(gcf, 'Position', [0 0 900 500])
set(gcf, 'renderer', 'painters')
